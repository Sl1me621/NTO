# -*- coding: utf-8 -*-
import cv2
import numpy as np
# TODO: Допишите импорт библиотек, которые собираетесь использовать


def load_tools() -> list:
    """ 
    Функция используется для загрузки моделей машинного обучения из файлов или загрузки эталонных изображений. 

    Выходные параметры: загруженный(е) модели(и), эталонные изображения

    Если вы не собираетесь использовать эту функцию, пусть возвращает пустой список []
    Если вы используете несколько моделей, возвращайте их список [model1, model2]

    То, что вы вернёте из этой функции, будет передано вторым аргументом в функцию count_the_types_of_cubes
    """

    # TODO: Отредактируйте функцию по своему усмотрению.
    # Модель нейронной сети или эталонные изображения, загрузите на онайн-платформу вместе с eval.py.

    tools = []
    return tools


def count_the_types_of_cubes(image, tools) -> np.array:
    """
        Функция для детектирования сфетофоров.

        Входные данные: изображение (bgr), прочитано cv2.imread и список из функции load_tools
        Выходные данные: np.array размерности 3х3х2 с элементами типа int.
            Значения элементов определяют тип кубика на изображении.
            Возможные значения: 
                0 - позиция пуста, 
                1 - невидимый кубик, 
                2 - красный кубик, 
                3 - зелёный кубик, 
                4 - серый кубик, 
                5 - оранжевый кубик.


        Примеры вывода:
            [[[4, 1, 1], [0, 1, 1], [2, 0, 5]], [[5, 5, 4], [0, 5, 3], [2, 0, 0]]]

            [[[3, 1, 1], [3, 4, 1], [5, 1, 1]], [[0, 5, 4], [0, 0, 4], [0, 4, 5]]]
    """

    # TODO: Отредактируйте эту функцию по своему усмотрению.
    # Для удобства можно создать собственные функции в этом файле.
    # Алгоритм проверки один раз вызовет функцию load_tools
    # и для каждого тестового изображения будет вызывать функцию count_the_types_of_cubes
    # Все остальные функции должны вызываться из вышеперечисленных.


    result = np.array([[[4, 1, 1], [0, 1, 1], [2, 0, 5]], [[5, 5, 4], [0, 5, 3], [2, 0, 0]]])

    return result